{"version":3,"file":"static/js/84.efbbe75c.chunk.js","mappings":"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","sources":["components/registro/registroUsuario.tsx","utils/auth.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../assets/css/Registro.css';\r\nimport { saveUserToLocalStorage } from '../../utils/auth';\r\nimport { User } from '../../utils/users';\r\nimport Logo from '../../assets/image/LOGO-ULEAM-HORIZONTAL.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RegistroUsuario: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [cedula, setCedula] = useState('');\r\n  const [fechaNacimiento, setFechaNacimiento] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [correo, setCorreo] = useState('');\r\n  const [nombre, setNombre] = useState('');\r\n  const [apellido, setApellido] = useState('');\r\n  const [ciudad, setCiudad] = useState('');\r\n  const [direccion, setDireccion] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [telefono, setTelefono] = useState('');\r\n  const [sexo, setSexo] = useState('');\r\n  const [discapacidad, setDiscapacidad] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError('Las contraseñas no coinciden');\r\n    } else if (!validateUsername(username)) {\r\n      setError('El nombre de usuario debe tener entre 4 y 10 caracteres');\r\n    } else if (!validatePassword(password)) {\r\n      setError('La contraseña debe tener al menos 6 caracteres');\r\n    } else if (!validateCedula(cedula)) {\r\n      setError('La cédula debe tener 10 dígitos');\r\n    } else if (!validateFechaNacimiento(fechaNacimiento)) {\r\n      setError('La fecha de nacimiento no es válida');\r\n    } else if (!validateCorreo(correo)) {\r\n      setError('El correo electrónico no es válido');\r\n    } else if (!validateNombre(nombre)) {\r\n      setError('El nombre no puede estar vacío y debe tener entre 2 y 20 caracteres');\r\n    } else if (!validateApellido(apellido)) {\r\n      setError('El apellido no puede estar vacío y debe tener entre 2 y 20 caracteres');\r\n    } else if (!validateCiudad(ciudad)) {\r\n      setError('La ciudad no puede estar vacía y debe tener entre 2 y 50 caracteres');\r\n    } else if (!validateDireccion(direccion)) {\r\n      setError('La dirección no puede estar vacía y debe tener entre 5 y 100 caracteres');\r\n    } else if (!validateTelefono(telefono)) {\r\n      setError('El teléfono debe tener entre 7 y 15 dígitos');\r\n    } else {\r\n      const newUser: User = {\r\n        username,\r\n        password,\r\n        cedula,\r\n        fechaNacimiento,\r\n        correo,\r\n        nombre,\r\n        apellido,\r\n        ciudad,\r\n        direccion,\r\n        estado,\r\n        telefono,\r\n        sexo,\r\n        discapacidad\r\n      };\r\n      saveUserToLocalStorage(newUser); // Guardar nuevo usuario en localStorage\r\n      setUsername('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n      setCedula('');\r\n      setFechaNacimiento('');\r\n      setCorreo('');\r\n      setError('');\r\n      setApellido('');\r\n      setNombre('');\r\n      setCiudad('');\r\n      setDireccion('');\r\n      setEstado('');\r\n      setTelefono('');\r\n      setSexo('');\r\n      setDiscapacidad('');\r\n      alert('Usuario registrado con éxito');\r\n    }\r\n  };\r\n\r\n  const validateUsername = (username: string) => {\r\n    return username.length >= 4 && username.length <= 10;\r\n  };\r\n\r\n  const validatePassword = (password: string) => {\r\n    return password.length >= 6;\r\n  };\r\n\r\n  const validateCedula = (cedula: string) => {\r\n    return cedula.length === 10;\r\n  };\r\n\r\n  const validateFechaNacimiento = (fechaNacimiento: string) => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(fechaNacimiento);\r\n    return selectedDate <= currentDate;\r\n  };\r\n\r\n  const validateCorreo = (correo: string) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(correo);\r\n  };\r\n\r\n  const validateNombre = (nombre: string) => {\r\n    const nombreRegex = /^[a-zA-ZáéíóúÁÉÍÓÚ\\s]+$/;\r\n    return nombreRegex.test(nombre.trim()) && nombre.trim().length >= 2 && nombre.trim().length <= 20;\r\n  };\r\n\r\n  const validateApellido = (apellido: string) => {\r\n    const apellidoRegex = /^[a-zA-ZáéíóúÁÉÍÓÚ\\s]+$/;\r\n    return apellidoRegex.test(apellido.trim()) && apellido.trim().length >= 2 && apellido.trim().length <= 20;\r\n  };\r\n\r\n  const validateCiudad = (ciudad: string) => {\r\n    return ciudad.trim().length >= 2 && ciudad.trim().length <= 50;\r\n  };\r\n\r\n  const validateDireccion = (direccion: string) => {\r\n    return direccion.trim().length >= 5 && direccion.trim().length <= 100;\r\n  };\r\n\r\n  const validateTelefono = (telefono: string) => {\r\n    const telefonoRegex = /^[0-9]+$/;\r\n    return telefonoRegex.test(telefono) && telefono.length >= 7 && telefono.length <= 15;\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <button className=\"back-button\" id=\"back-button\" onClick={() => navigate('/login')}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </button>\r\n      <form className=\"register-form\" onSubmit={handleRegister}>\r\n        <img src={Logo} alt=\"Logo ULEAM\" className=\"Logo\" />\r\n        <h2>Registro</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre de usuario\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre\"\r\n          value={nombre}\r\n          onChange={(e) => setNombre(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Apellido\"\r\n          value={apellido}\r\n          onChange={(e) => setApellido(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Cedula\"\r\n          value={cedula}\r\n          onChange={(e) => setCedula(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Fecha de nacimiento\"\r\n          value={fechaNacimiento}\r\n          onChange={(e) => setFechaNacimiento(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Correo\"\r\n          value={correo}\r\n          onChange={(e) => setCorreo(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ciudad\"\r\n          value={ciudad}\r\n          onChange={(e) => setCiudad(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Dirección\"\r\n          value={direccion}\r\n          onChange={(e) => setDireccion(e.target.value)}\r\n          required\r\n        />\r\n        <select\r\n          value={estado}\r\n          onChange={(e) => setEstado(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Seleccione su estado</option>\r\n          <option value=\"casada/o\">Casada/o</option>\r\n          <option value=\"soltera/o\">Soltera/o</option>\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Teléfono\"\r\n          value={telefono}\r\n          onChange={(e) => setTelefono(e.target.value)}\r\n          required\r\n        />\r\n        <select\r\n          value={sexo}\r\n          onChange={(e) => setSexo(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Seleccione su sexo</option>\r\n          <option value=\"masculino\">Masculino</option>\r\n          <option value=\"femenino\">Femenino</option>\r\n        </select>\r\n        <select\r\n          value={discapacidad}\r\n          onChange={(e) => setDiscapacidad(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Seleccione su discapacidad</option>\r\n          <option value=\"auditiva\">Auditiva</option>\r\n          <option value=\"visual\">Visual</option>\r\n          <option value=\"motora\">Motora</option>\r\n          <option value=\"cognitiva\">Cognitiva</option>\r\n          <option value=\"ninguna\">Ninguna</option>\r\n        </select>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\">Registrar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistroUsuario;\r\n","// ../../utils/auth.ts\r\nimport { User } from '../utils/users';\r\n\r\nconst USERS_KEY = 'users';\r\nconst LOGGED_IN_USER_KEY = 'loggedInUser';\r\n\r\nexport const saveUserToLocalStorage = (user: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  users.push(user);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\r\n};\r\n\r\nexport const getUsersFromLocalStorage = (): User[] => {\r\n  return JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n};\r\n\r\nexport const deleteUserFromLocalStorage = (username: string) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers = users.filter((user: User) => user.username !== username);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n};\r\n\r\nexport const authenticateUser = (username: string, password: string): User | null => {\r\n  const users = getUsersFromLocalStorage();\r\n  const user = users.find(u => u.username === username && u.password === password);\r\n  if (user) {\r\n    localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(user));\r\n    return user;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getLoggedInUser = (): User | null => {\r\n  const user = localStorage.getItem(LOGGED_IN_USER_KEY);\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const updateUserInLocalStorage = (updatedUser: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers: User[] = users.map((user: User) =>\r\n    user.username === updatedUser.username ? updatedUser : user\r\n  );\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n\r\n  // También actualizar el usuario actualmente autenticado\r\n  localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(updatedUser));\r\n};\r\n"],"names":["RegistroUsuario","username","setUsername","useState","password","setPassword","confirmPassword","setConfirmPassword","cedula","setCedula","fechaNacimiento","setFechaNacimiento","error","setError","correo","setCorreo","nombre","setNombre","apellido","setApellido","ciudad","setCiudad","direccion","setDireccion","estado","setEstado","telefono","setTelefono","sexo","setSexo","discapacidad","setDiscapacidad","navigate","useNavigate","validateUsername","length","validatePassword","validateCedula","validateFechaNacimiento","currentDate","Date","validateCorreo","test","validateNombre","trim","validateApellido","validateCiudad","validateDireccion","validateTelefono","_jsxs","className","children","_jsx","id","onClick","FontAwesomeIcon","icon","faArrowLeft","onSubmit","e","preventDefault","newUser","saveUserToLocalStorage","alert","src","Logo","alt","type","placeholder","value","onChange","target","required","USERS_KEY","LOGGED_IN_USER_KEY","user","users","JSON","parse","localStorage","getItem","push","setItem","stringify","authenticateUser","find","u","getLoggedInUser","updateUserInLocalStorage","updatedUser","updatedUsers","map"],"sourceRoot":""}
{"version":3,"file":"static/js/133.e1f8323a.chunk.js","mappings":"gPA2CA,MAyKA,EAzK0BA,MACPC,EAAAA,EAAAA,MAAjB,MACOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAwB,KACzDC,EAAOC,IAAYF,EAAAA,EAAAA,UAAiB,KACpCG,EAAmBC,IAAwBJ,EAAAA,EAAAA,UAA4B,KACvEK,EAAUC,IAAeN,EAAAA,EAAAA,UAAoB,KAC7CO,EAAYC,IAAiBR,EAAAA,EAAAA,UAAsB,KAE1DS,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAqBC,aAAaC,QAAQ,gBAC5CF,GACFX,EAAgBc,KAAKC,MAAMJ,IAG7B,MAAMK,EAAcJ,aAAaC,QAAQ,SACrCG,GACFb,EAASW,KAAKC,MAAMC,IAGtB,MAAMC,EAA0BL,aAAaC,QAAQ,qBACjDI,GACFZ,EAAqBS,KAAKC,MAAME,IAGlC,MAAMC,EAAiBN,aAAaC,QAAQ,YACxCK,GACFX,EAAYO,KAAKC,MAAMG,IAGzB,MAAMC,EAAkBP,aAAaC,QAAQ,gBACzCM,GACFV,EAAcK,KAAKC,MAAMI,GAC3B,GACC,IAEH,MAYMC,EAA8BC,IAClCA,EAAIC,KAAK,mBAAoB,GAAI,IAEjC,MAAMC,EAAYxB,EAAayB,KAAIC,GAAe,CAChDA,EAAYC,KACZD,EAAYE,KACZF,EAAYG,QACZH,EAAYI,WAIdR,EAAIS,UAAU,CACZC,OAAQ,GACRC,KAAM,CAAC,CAAC,QAAS,OAAQ,WAAY,kBACrCC,KAAMV,IAGRF,EAAIa,SAAS,EAGTC,EAAuBd,IAC3BA,EAAIC,KAAK,sBAAuB,GAAI,IAEpC,MAAMC,EAAYrB,EAAMsB,KAAIY,GAAQ,CAACA,EAAKC,YAG1ChB,EAAIS,UAAU,CACZC,OAAQ,GACRC,KAAM,CAAC,CAAC,YACRC,KAAMV,IAGRF,EAAIa,SAAS,EAGTI,EAAmCjB,IACvCA,EAAIC,KAAK,qCAAmC,GAAI,IAEhDlB,EAAkBmC,SAAQ,CAACC,EAASC,KAClCpB,EAAIC,KAAK,wBAADoB,OAAsBD,EAAQ,GAAK,GAAI,IAC/CpB,EAAIC,KAAK,aAADoB,OAAcF,EAAQG,aAAe,GAAI,IAGjDtB,EAAIC,KAAK,gBAAiB,GAAI,IAC9BkB,EAAQhC,WAAW+B,SAAQ,CAACK,EAAWC,KACrCxB,EAAIC,KAAK,GAADoB,OAAIG,EAAM,EAAC,MAAAH,OAAKE,GAAa,GAAI,GAAW,GAANC,EAAS,IAIzDxB,EAAIC,KAAK,mBAAiB,GAAI,IAC9BkB,EAAQM,UAAUP,SAAQ,CAACQ,EAAWF,KACpCxB,EAAIC,KAAK,GAADoB,OAAIG,EAAM,EAAC,MAAAH,OAAKK,GAAa,GAAI,GAAW,GAANF,EAAS,IAIzDxB,EAAIC,KAAK,gBAAiB,GAAI,KAC9BkB,EAAQQ,YAAYT,SAAQ,CAACU,EAAYJ,KACvCxB,EAAIC,KAAK,GAADoB,OAAIG,EAAM,EAAC,MAAAH,OAAKO,GAAc,GAAI,IAAY,GAANJ,EAAS,IAG3DxB,EAAIa,SAAS,GACb,EAGEgB,EAA0B7B,IAC9BA,EAAIC,KAAK,mBAAoB,GAAI,IAEjC,MAAMC,EAAYjB,EAASkB,KAAIlB,GAAY,CACzCA,EAASoB,KACTpB,EAAS6C,YACT7C,EAAS8C,OAAOC,WAChB/C,EAASgD,KACThD,EAASiD,UAIXlC,EAAIS,UAAU,CACZC,OAAQ,GACRC,KAAM,CAAC,CAAC,uBAAqB,cAAe,WAAY,UAAW,WACnEC,KAAMV,IAGRF,EAAIa,SAAS,EAGTsB,EAA0BnC,IAC9BA,EAAIC,KAAK,yCAAuC,GAAI,IAEpD,MAAMC,EAAYf,EAAWgB,KAAIiC,GAAQ,CACvCA,EAAK/B,KACL+B,EAAKV,UAAUM,WACfI,EAAKb,UAAUS,WACfI,EAAKH,KACLG,EAAKF,UAIPlC,EAAIS,UAAU,CACZC,OAAQ,GACRC,KAAM,CAAC,CAAC,QAAS,YAAa,eAAgB,SAAU,WACxDC,KAAMV,GACN,EAGJ,OACEmC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACvBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,SAAQH,SAAC,wBACtBC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,sBAAqBH,SAAC,kCACnCC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,qBAAoBH,SAAC,2CAIpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAAA,UAAQG,QAhISC,KACrB,MAAM5C,EAAM,IAAI6C,EAAAA,QAEhB9C,EAA2BC,GAC3Bc,EAAoBd,GACpBiB,EAAgCjB,GAChC6B,EAAuB7B,GACvBmC,EAAuBnC,GAEvBA,EAAI8C,KAAK,qBAAqB,EAuHMP,SAAC,gCAE/B,C","sources":["components/admin/Informe.tsx"],"sourcesContent":["// src/components/Reports.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport '../../assets/css/Informe.css';\r\nimport '../../assets/css/barra.css'\r\nimport '../../assets/css/general.css'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\ninterface Appointment {\r\n  date: string;\r\n  time: string;\r\n  patient: string;\r\n  dentist: string;\r\n}\r\n\r\ninterface User {\r\n  username: string;\r\n}\r\n\r\ninterface ClinicalHistory {\r\n  patientName: string;\r\n  treatments: string[];\r\n  diagnoses: string[];\r\n  medications: string[];\r\n}\r\n\r\ninterface Payment {\r\n  date: string;\r\n  amount: number;\r\n  description: string;\r\n  name: string;\r\n  cedula: string;\r\n}\r\n\r\ninterface Treatment {\r\n  date: string;\r\n  diagnosis: string;\r\n  treatment: string;\r\n  name: string;\r\n  cedula: string;\r\n}\r\n\r\nconst Reports: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [clinicalHistories, setClinicalHistories] = useState<ClinicalHistory[]>([]);\r\n  const [payments, setPayments] = useState<Payment[]>([]);\r\n  const [treatments, setTreatments] = useState<Treatment[]>([]);\r\n\r\n  useEffect(() => {\r\n    const storedAppointments = localStorage.getItem('appointments');\r\n    if (storedAppointments) {\r\n      setAppointments(JSON.parse(storedAppointments));\r\n    }\r\n\r\n    const storedUsers = localStorage.getItem('users');\r\n    if (storedUsers) {\r\n      setUsers(JSON.parse(storedUsers));\r\n    }\r\n\r\n    const storedClinicalHistories = localStorage.getItem('clinicalHistories');\r\n    if (storedClinicalHistories) {\r\n      setClinicalHistories(JSON.parse(storedClinicalHistories));\r\n    }\r\n\r\n    const storedPayments = localStorage.getItem('payments');\r\n    if (storedPayments) {\r\n      setPayments(JSON.parse(storedPayments));\r\n    }\r\n\r\n    const storedTreatment = localStorage.getItem('clinicalData');\r\n    if (storedTreatment) {\r\n      setTreatments(JSON.parse(storedTreatment));\r\n    }\r\n  }, []);\r\n\r\n  const generateReport = () => {\r\n    const doc = new jsPDF();\r\n\r\n    generateAppointmentsReport(doc);\r\n    generateUsersReport(doc);\r\n    generateClinicalHistoriesReport(doc);\r\n    generatePaymentsReport(doc);\r\n    generateActivityReport(doc);\r\n\r\n    doc.save('clinic_reports.pdf');\r\n  };\r\n\r\n  const generateAppointmentsReport = (doc: jsPDF) => {\r\n    doc.text('Informe de Citas', 10, 10);\r\n\r\n    const tableData = appointments.map(appointment => [\r\n      appointment.date,\r\n      appointment.time,\r\n      appointment.patient,\r\n      appointment.dentist,\r\n    ]);\r\n\r\n    // @ts-ignore\r\n    doc.autoTable({\r\n      startY: 20,\r\n      head: [['Fecha', 'Hora', 'Paciente', 'Odontólogo']],\r\n      body: tableData,\r\n    });\r\n\r\n    doc.addPage();\r\n  };\r\n\r\n  const generateUsersReport = (doc: jsPDF) => {\r\n    doc.text('Informe de Usuarios', 10, 10);\r\n\r\n    const tableData = users.map(user => [user.username]);\r\n\r\n    // @ts-ignore\r\n    doc.autoTable({\r\n      startY: 20,\r\n      head: [['Usuario']],\r\n      body: tableData,\r\n    });\r\n\r\n    doc.addPage();\r\n  };\r\n\r\n  const generateClinicalHistoriesReport = (doc: jsPDF) => {\r\n    doc.text('Informe de Historiales Clínicos', 10, 10);\r\n\r\n    clinicalHistories.forEach((history, index) => {\r\n      doc.text(`Historial Clínico ${index + 1}`, 10, 20);\r\n      doc.text(`Paciente: ${history.patientName}`, 10, 30);\r\n\r\n      // Detalles de tratamientos\r\n      doc.text('Tratamientos:', 10, 40);\r\n      history.treatments.forEach((treatment, idx) => {\r\n        doc.text(`${idx + 1}. ${treatment}`, 15, 50 + idx * 10);\r\n      });\r\n\r\n      // Detalles de diagnósticos\r\n      doc.text('Diagnósticos:', 10, 80);\r\n      history.diagnoses.forEach((diagnosis, idx) => {\r\n        doc.text(`${idx + 1}. ${diagnosis}`, 15, 90 + idx * 10);\r\n      });\r\n\r\n      // Detalles de medicamentos\r\n      doc.text('Medicamentos:', 10, 120);\r\n      history.medications.forEach((medication, idx) => {\r\n        doc.text(`${idx + 1}. ${medication}`, 15, 130 + idx * 10);\r\n      });\r\n\r\n      doc.addPage();\r\n    });\r\n  };\r\n\r\n  const generatePaymentsReport = (doc: jsPDF) => {\r\n    doc.text('Informe de Pagos', 10, 10);\r\n\r\n    const tableData = payments.map(payments => [\r\n      payments.date,\r\n      payments.description,\r\n      payments.amount.toString(),\r\n      payments.name,\r\n      payments.cedula,\r\n    ]);\r\n\r\n    // @ts-ignore\r\n    doc.autoTable({\r\n      startY: 20,\r\n      head: [['Número de Factura', 'Tratamiento', 'Cantidad', 'cliente', 'cedula']],\r\n      body: tableData,\r\n    });\r\n\r\n    doc.addPage();\r\n  };\r\n\r\n  const generateActivityReport = (doc: jsPDF) => {\r\n    doc.text('Informe de Actividad de Odontólogos', 10, 10);\r\n\r\n    const tableData = treatments.map(item => [\r\n      item.date,\r\n      item.diagnosis.toString(),\r\n      item.treatment.toString(),\r\n      item.name,\r\n      item.cedula,\r\n    ]);\r\n\r\n    // @ts-ignore\r\n    doc.autoTable({\r\n      startY: 20,\r\n      head: [['fecha', 'diagnosis', 'Tratamientos', 'nombre', 'cedula']],\r\n      body: tableData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"reports-container\">\r\n      <nav className=\"navbar\">\r\n      <ul className=\"navbar-links\">\r\n        <li><Link to=\"/login\">Cerrar sesión</Link></li>\r\n        <li><Link to=\"/historial-paciente\">Ver historial de pacientes</Link></li>\r\n        <li><Link to=\"/agregar-historial\">Agregar historial de pacientes</Link></li>\r\n      </ul>\r\n    </nav>\r\n\r\n      <h2>Informes y Estadísticas</h2>\r\n      <div className=\"report-form\">\r\n        <button onClick={generateReport}>Generar Informes en PDF</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"names":["Reports","useNavigate","appointments","setAppointments","useState","users","setUsers","clinicalHistories","setClinicalHistories","payments","setPayments","treatments","setTreatments","useEffect","storedAppointments","localStorage","getItem","JSON","parse","storedUsers","storedClinicalHistories","storedPayments","storedTreatment","generateAppointmentsReport","doc","text","tableData","map","appointment","date","time","patient","dentist","autoTable","startY","head","body","addPage","generateUsersReport","user","username","generateClinicalHistoriesReport","forEach","history","index","concat","patientName","treatment","idx","diagnoses","diagnosis","medications","medication","generatePaymentsReport","description","amount","toString","name","cedula","generateActivityReport","item","_jsxs","className","children","_jsx","Link","to","onClick","generateReport","jsPDF","save"],"sourceRoot":""}
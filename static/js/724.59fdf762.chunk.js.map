{"version":3,"file":"static/js/724.59fdf762.chunk.js","mappings":"4OAiBA,MA0DA,EA1DwBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MAejB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAcG,GAAG,cAAcC,QAASA,IAAMP,EAAS,KAAKI,UAC1EC,EAAAA,EAAAA,KAACG,EAAAA,EAAe,CAACC,KAAMC,EAAAA,SAE3BL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaQ,SAnBpBC,IACjBA,EAAEC,iBACF,MAAMC,GAAOC,EAAAA,EAAAA,IAAiBtB,EAAUG,GACpCkB,GACAf,EAAS,IACTiB,MAAM,+BACNC,eAAeC,QAAQ,OAAQC,KAAKC,UAAUN,IAC9Cd,EAAS,YAETD,EAAS,2BACb,EAS2DK,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKgB,IAAKC,EAAMC,IAAI,aAAapB,UAAU,UAC3CE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,SACImB,KAAK,OACLC,YAAY,oBACZC,MAAOjC,EACPkC,SAAWf,GAAMlB,EAAYkB,EAAEgB,OAAOF,OACtCG,UAAQ,KAEZxB,EAAAA,EAAAA,KAAA,SACImB,KAAK,WACLC,YAAY,gBACZC,MAAO9B,EACP+B,SAAWf,GAAMf,EAAYe,EAAEgB,OAAOF,OACtCG,UAAQ,IAEX/B,IAASO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,QAAOC,SAAEN,KAChCO,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAQpB,SAAC,uBACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBI,QAASA,IAAMP,EAAS,gBAAgBI,SAAC,0CAG7EC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBI,QAASA,IAAMP,EAAS,aAAaI,SAAC,0BAMpF,C,8DCpEd,MAAM0B,EAAY,QACZC,EAAqB,eAEdC,EAA0BlB,IACrC,MAAMmB,EAAQd,KAAKe,MAAMC,aAAaC,QAAQN,IAAc,MAC5DG,EAAMI,KAAKvB,GACXqB,aAAajB,QAAQY,EAAWX,KAAKC,UAAUa,GAAO,EAa3ClB,EAAmBA,CAACtB,EAAkBG,KACjD,MACMkB,EAXCK,KAAKe,MAAMC,aAAaC,QAAQN,IAAc,MAWlCQ,MAAKC,GAAKA,EAAE9C,WAAaA,GAAY8C,EAAE3C,WAAaA,IACvE,OAAIkB,GACFqB,aAAajB,QAAQa,EAAoBZ,KAAKC,UAAUN,IACjDA,GAEF,IAAI,EAGA0B,EAAkBA,KAC7B,MAAM1B,EAAOqB,aAAaC,QAAQL,GAClC,OAAOjB,EAAOK,KAAKe,MAAMpB,GAAQ,IAAI,EAG1B2B,EAA4BC,IACvC,MACMC,EADQxB,KAAKe,MAAMC,aAAaC,QAAQN,IAAc,MACzBc,KAAK9B,GACtCA,EAAKrB,WAAaiD,EAAYjD,SAAWiD,EAAc5B,IAEzDqB,aAAajB,QAAQY,EAAWX,KAAKC,UAAUuB,IAG/CR,aAAajB,QAAQa,EAAoBZ,KAAKC,UAAUsB,GAAa,C","sources":["components/login/Login.tsx","utils/auth.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../assets/css/Login.css';\r\nimport { authenticateUser } from '../../utils/auth';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Logo from '../../assets/image/LOGO-ULEAM-HORIZONTAL.png';\r\n\r\ninterface User {\r\n    username: string;\r\n    nombre: string;\r\n    apellido: string;\r\n    cedula: string;\r\n    fechaNacimiento: string;\r\n    correo: string;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const user = authenticateUser(username, password);\r\n        if (user) {\r\n            setError('');\r\n            alert('Inicio de sesión exitoso');\r\n            sessionStorage.setItem('user', JSON.stringify(user));\r\n            navigate('/perfil');\r\n        } else {\r\n            setError('Credenciales incorrectas');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='fondo'>\r\n            <button className=\"back-button\" id=\"back-button\" onClick={() => navigate('/')}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            <div className=\"login-container\">\r\n                <form className=\"login-form\" onSubmit={handleLogin}>\r\n                    <img src={Logo} alt=\"Logo ULEAM\" className=\"Logo\" />\r\n                    <h2>Inicio de Sesión</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre de usuario\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Contraseña\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    {error && <p className=\"error\">{error}</p>}\r\n                    <button type=\"submit\">Iniciar Sesión</button>\r\n                    <div className=\"login-options\">\r\n                        <button className=\"register-button\" onClick={() => navigate('/login-admin')}>\r\n                            Iniciar sesión como administrador\r\n                        </button>\r\n                        <button className=\"register-button\" onClick={() => navigate('/registro')}>\r\n                            Registrarse\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","// ../../utils/auth.ts\r\nimport { User } from '../utils/users';\r\n\r\nconst USERS_KEY = 'users';\r\nconst LOGGED_IN_USER_KEY = 'loggedInUser';\r\n\r\nexport const saveUserToLocalStorage = (user: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  users.push(user);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\r\n};\r\n\r\nexport const getUsersFromLocalStorage = (): User[] => {\r\n  return JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n};\r\n\r\nexport const deleteUserFromLocalStorage = (username: string) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers = users.filter((user: User) => user.username !== username);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n};\r\n\r\nexport const authenticateUser = (username: string, password: string): User | null => {\r\n  const users = getUsersFromLocalStorage();\r\n  const user = users.find(u => u.username === username && u.password === password);\r\n  if (user) {\r\n    localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(user));\r\n    return user;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getLoggedInUser = (): User | null => {\r\n  const user = localStorage.getItem(LOGGED_IN_USER_KEY);\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const updateUserInLocalStorage = (updatedUser: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers: User[] = users.map((user: User) =>\r\n    user.username === updatedUser.username ? updatedUser : user\r\n  );\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n\r\n  // También actualizar el usuario actualmente autenticado\r\n  localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(updatedUser));\r\n};\r\n"],"names":["Login","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","_jsxs","className","children","_jsx","id","onClick","FontAwesomeIcon","icon","faArrowLeft","onSubmit","e","preventDefault","user","authenticateUser","alert","sessionStorage","setItem","JSON","stringify","src","Logo","alt","type","placeholder","value","onChange","target","required","USERS_KEY","LOGGED_IN_USER_KEY","saveUserToLocalStorage","users","parse","localStorage","getItem","push","find","u","getLoggedInUser","updateUserInLocalStorage","updatedUser","updatedUsers","map"],"sourceRoot":""}